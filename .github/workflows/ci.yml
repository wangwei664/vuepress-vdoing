name: CI

# 在 main 分支发生 push 事件时触发
on: 
  push:
    branches:
      - main

jobs: # 工作流
  build:
    runs-on: ubuntu-latest #运行在虚拟机环境ubuntu-latest

    strategy:
      matrix:
        node-version: [14.x]

    steps: 
      # 步骤1: 检出仓库，获取源码。
      - name: Checkout
        uses: actions/checkout@v2 # 使用的动作。官方actions库：https://github.com/actions
      
      # 步骤2: 安装 Nodejs
      - name: setup Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }} # 版本
      
      # 步骤3: 缓存 node_modules
      - name: Cache dependencies
        uses: actions/cache@v2
        id: yarn-cache
        with:
          path: |
            **/node_modules
          key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      # 步骤4: 如果缓存没有命中，安装依赖
      - name: Install dependencies
        if: steps.yarn-cache.outputs.cache-hit != 'true'
        run: yarn --frozen-lockfile

      # 步骤5: 执行部署脚本
      - name: Build and Deploy
        env: # 设置环境变量【在仓库的 secret 中配置 ACCESS_TOKEN 变量】
          GITHUB_TOKEN: ${{ secrets.ACCESS_TOKEN }} # GitHub access token 私密变量
        run: yarn run deploy # 执行部署命令  
        # package.json 中添加 "deploy": "bash deploy.sh"
